http://www.cnblogs.com/wuchanming/p/4345243.html

::死锁的几个必要条件(necessary conditions)
     互斥条件　　　(Mutual exclusion)　：资源不能被共享，只能由一个进程使用。
     请求与保持条件(Hold and wait)   　：进程已获得了一些资源，但因请求其它资源被阻塞时，对已获得的资源保持不放。
     不可抢占条件　(No pre-emption)　  ：有些系统资源是不可抢占的，当某个进程已获得这种资源后，系统不能强行收回，只能由进程使用完时自己释放。
     循环等待条件　(Circular wait)   　：若干个进程形成环形链，每个都占用对方申请的下一个资源。
     
     
::处理死锁的策略:
  (1) 死锁预防：破坏导致死锁必要条件中的任意一个就可以预防死锁。
      例如，要求用户申请资源时一次性申请所需要的全部资源，这就破坏了保持和等待条件；将资源分层，得到上一层资源后，才能够申请下一层资源，
      它破坏了环路等待条件。预防通常会降低系统的效率。
  (2) 死锁避免：避免是指进程在每次申请资源时判断这些操作是否安全，例如，使用银行家算法。死锁避免算法的执行会增加系统的开销。
  (3) 死锁检测：死锁预防和避免都是事前措施，而死锁的检测则是判断系统是否处于死锁状态，如果是，则执行死锁解除策略。
  (4) 死锁解除：这是与死锁检测结合使用的，它使用的方式就是剥夺。即将某进程所拥有的资源强行收回，分配给其他的进程。

鸵鸟算法：
  该算法可以应用在极少发生死锁的的情况下。为什么叫鸵鸟算法呢，因为传说中鸵鸟看到危险就把头埋在地底下，可能鸵鸟觉得看不到危险也就没危险了吧。
  跟掩耳盗铃有点像。

银行家算法：
        所谓银行家算法，是指在分配资源之前先看清楚，资源分配后是否会导致系统死锁。如果会死锁，则不分配，否则就分配。
